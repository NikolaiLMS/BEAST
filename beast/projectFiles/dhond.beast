4 name5 dhond8 elecDesc742 4 name14 stacks_richtig14 votingDeclLine1 24 code625 //Stacked single-choice: Votes are only represented as stacks of votes for the parties
//null: null
struct stack_result voting(unsigned int votes[C]) {
   struct stack_result mandates;
   int divisor[C];
   
   for (int i = 0; i < C; i++) mandates.arr[i] = 0;
   for (int i = 0; i < C; i++) divisor[i] = 1;
   
   int elected = 0;
   for (int j = 0; j < S; j++) {
       for (int i = 0; i < C; i++) {
             if (divisor[i] * votes[elected] < divisor[elected] * votes[i]) {
                elected = i;
             }
       }
       mandates.arr[elected]++;
       divisor[elected]++;
   }
    
    return mandates;
} 
9 inputType19 SINGLE_CHOICE_STACK10 outputType15 STACK_PER_PARTY8 propList250 <propertyListName>
New PropertyList
</propertyListName>
<propertyItem>
<preAndPostConditions>
4 name10 Property 03 pre0 4 post0 7 varlist0 
</preAndPostConditions>
<testStatus>
false
</testStatus>
<marginStatus>
true
</marginStatus>

</propertyItem>
19 electionCheckParams375 <amountVotersMin>
1
</amountVotersMin>
<amountVotersMax>
1
</amountVotersMax>
<amountCandidatesMin>
1
</amountCandidatesMin>
<amountCandidatesMax>
1
</amountCandidatesMax>
<amountSeatsMin>
5
</amountSeatsMin>
<amountSeatsMax>
5
</amountSeatsMax>
<timeout>
<duration>
0
</duration>
<timeunit>
SECONDS
</timeunit>

</timeout>
<processes>
0
</processes>
<argument>

</argument>
