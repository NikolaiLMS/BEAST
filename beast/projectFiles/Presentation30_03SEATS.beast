4 name22 Presentation30_03SEATS8 elecDesc1922 4 name5 seats14 votingDeclLine1 54 code1822 #include <stdlib.h>
#include <assert.h>
//Single-choice: Wähler stimmt jeweils für einen Kandidaten
//Sitze
int maxDistricts = 10;
unsigned int * voting(unsigned int votes[V]) { 
               int amountDistricts = min(V, maxDistricts);
        int votesPerDistrict = V / amountDistricts;
        
        int *districts = malloc(amountDistricts * sizeof(int));
        
        int alreadyVoted = 0;
        
        //we go though all districts except the last one
        for(unsigned int i = 0; i < amountDistricts - 1; ++i) {
                districts[i] = voteDistrict(i, votesPerDistrict, votesPerDistrict, votes);
                alreadyVoted = alreadyVoted + votesPerDistrict;
        }
        
        //put all remaining votes in the last district
        districts[amountDistricts - 1] = voteDistrict(amountDistricts - 1,
                                                       votesPerDistrict, (V - alreadyVoted), votes);
        
        return districts;
     //   return findMaxCand(districts, amountDistricts);
} 

int voteDistrict(int index, int offset, int amountVotes, unsigned int votes[V]) {
        unsigned int distVotes[C];
        
        for(unsigned int i = 0; i < C; ++i) {
                distVotes[i] = 0;
        }
        
        for(unsigned int i = 0; i < amountVotes; ++i) {
                distVotes[votes[(index * offset) + i]]++;
        }
        
        return findMaxCand(distVotes, C);
}

int findMaxCand(unsigned int distVotes[], int size) {
        int maxIndex = 0;
        int maxValue = 0;
        
        for(unsigned int i = 0; i < size; ++i) {
                assert(1 == 3);
                if (distVotes[i] > maxValue) {
                        maxIndex = i;
                        maxValue = distVotes[i];
                }
        }
        return maxIndex;
}
9 inputType13 SINGLE_CHOICE10 outputType13 CAND_PER_SEAT8 propList494 <propertyListName>
New PropertyList
</propertyListName>
<propertyItem>
<postAndPreProps>
4 name13 HillaryTrump23 pre173 Trump != Hillary;
VOTE_SUM_FOR_CANDIDATE1(Hillary) >> (V / 2);
VOTE_SUM_FOR_CANDIDATE1(Trump) < VOTE_SUM_FOR_CANDIDATE1(Hillary);
FOR_ALL_VOTERS(v) : VOTES1(v) == VOTES2(v);4 post17 ELECT1 != ELECT2;7 varlist94 symbolic_variable: id: Trump type: CANDIDATE;
symbolic_variable: id: Hillary type: CANDIDATE;

</postAndPreProps>
<testStatus>
true
</testStatus>

</propertyItem>
19 electionCheckParams390 <amountVotersMin>
3
</amountVotersMin>
<amountVotersMax>
4
</amountVotersMax>
<amountCandidatesMin>
2
</amountCandidatesMin>
<amountCandidatesMax>
4
</amountCandidatesMax>
<amountSeatsMin>
10
</amountSeatsMin>
<amountSeatsMax>
10
</amountSeatsMax>
<timeout>
<duration>
0
</duration>
<timeunit>
SECONDS
</timeunit>

</timeout>
<processes>
0
</processes>
<argument>
--unwind 150;
</argument>
