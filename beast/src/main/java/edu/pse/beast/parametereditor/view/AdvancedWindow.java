//package edu.pse.beast.parametereditor.view;
//
//import edu.pse.beast.highlevel.DisplaysStringsToUser;
//import edu.pse.beast.stringresource.StringLoaderInterface;
//import edu.pse.beast.stringresource.StringResourceLoader;
//
///**
// * Window that takes user input for additional arguments for CBMC
// * @author Jonas Wohnig
// */
//public class AdvancedWindow extends javax.swing.JFrame implements DisplaysStringsToUser {
//    private static final long serialVersionUID = 1L;
//    private String textAfterLastOK = "";
//    private boolean reacts;
//
//    /**
//     * Creates new form AdvancedWindow
//     */
//    public AdvancedWindow() {
//        initComponents();
//    }
//
//    /**
//     * This method is called from within the constructor to initialize the form.
//     * WARNING: Do NOT modify this code. The content of this method is always
//     * regenerated by the Form Editor.
//     */
//    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
//    private void initComponents() {
//
//        input = new javax.swing.JTextField();
//        ok = new javax.swing.JButton();
//        cancel = new javax.swing.JButton();
//
//        setTitle("Benutzerdefinierte Argumente f√ºr CBMC");
//
//        input.addActionListener(new java.awt.event.ActionListener() {
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                inputActionPerformed(evt);
//            }
//        });
//
//        ok.setText("OK");
//        ok.addActionListener(new java.awt.event.ActionListener() {
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                okActionPerformed(evt);
//            }
//        });
//
//        cancel.setText("Abbrechen");
//        cancel.addActionListener(new java.awt.event.ActionListener() {
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                cancelActionPerformed(evt);
//            }
//        });
//
//        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
//        getContentPane().setLayout(layout);
//        layout.setHorizontalGroup(
//            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(layout.createSequentialGroup()
//                .addContainerGap()
//                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//                    .addComponent(input)
//                    .addGroup(layout.createSequentialGroup()
//                        .addComponent(ok)
//                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
//                        .addComponent(cancel)
//                        .addGap(0, 242, Short.MAX_VALUE)))
//                .addContainerGap())
//        );
//        layout.setVerticalGroup(
//            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
//                .addContainerGap()
//                .addComponent(input, javax.swing.GroupLayout.PREFERRED_SIZE,
//                              javax.swing.GroupLayout.DEFAULT_SIZE,
//                              javax.swing.GroupLayout.PREFERRED_SIZE)
//                .addGap(18, 18, 18)
//                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
//                    .addComponent(ok)
//                    .addComponent(cancel))
//                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
//        );
//
//        pack();
//    } // </editor-fold>//GEN-END:initComponents
//
//    //GEN-FIRST:event_inputActionPerformed
//    private void inputActionPerformed(java.awt.event.ActionEvent evt) {
//        //
//    } //GEN-LAST:event_inputActionPerformed
//
//    //GEN-FIRST:event_okActionPerformed
//    private void okActionPerformed(java.awt.event.ActionEvent evt) {
//        if (reacts) {
//            textAfterLastOK = input.getText();
//        } else {
//            input.setText(textAfterLastOK);
//        }
//        setVisible(false);
//    }//GEN-LAST:event_okActionPerformed
//
//    //GEN-FIRST:event_cancelActionPerformed
//    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {
//        input.setText(textAfterLastOK);
//        setVisible(false);
//    } //GEN-LAST:event_cancelActionPerformed
//
//    /**
//     * @param args the command line arguments
//     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available,
//         * stay with the default look and feel.
//         * For details see
//         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info
//                     : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(AdvancedWindow.class.getName())
//              .log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(AdvancedWindow.class.getName())
//              .log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(AdvancedWindow.class.getName())
//              .log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(AdvancedWindow.class.getName())
//              .log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new AdvancedWindow().setVisible(true);
//            }
//        });
//    }
//
//    // Variables declaration - do not modify//GEN-BEGIN:variables
//    private javax.swing.JButton cancel;
//    private javax.swing.JTextField input;
//    private javax.swing.JButton ok;
//    // End of variables declaration//GEN-END:variables
//    /**
//     * Provides access to the JTextField that contains the user input
//     * @return JTextField
//     */
//    public javax.swing.JTextField getInputField() {
//        return input;
//    }
//    /**
//     * Provides access to the JButton that approves of the user input being stored
//     * @return JButton
//     */
//    public javax.swing.JButton getOkButton() {
//        return ok;
//    }
//
//    @Override
//    public void updateStringRes(StringLoaderInterface stringResIF) {
//        StringResourceLoader other =
//            stringResIF.getParameterEditorStringResProvider().getOtherStringRes();
//        setTitle(other.getStringFromID("title_advanced"));
//        ok.setText(other.getStringFromID("ok"));
//        cancel.setText(other.getStringFromID("cancel"));
//    }
//    /**
//     * Toggles whether this window reacts to user input (to not interrupt checks)
//     * @param reacts whether it reacts
//     */
//    void setReacts(boolean reacts) {
//        this.reacts = reacts;
//    }
//}
