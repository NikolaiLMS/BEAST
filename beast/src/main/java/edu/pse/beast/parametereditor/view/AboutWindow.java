package edu.pse.beast.parametereditor.view;

import edu.pse.beast.highlevel.DisplaysStringsToUser;
import edu.pse.beast.stringresource.StringLoaderInterface;
import edu.pse.beast.stringresource.StringResourceLoader;

/**
 * The Class AboutWindow.
 *
 * @author Jonas Wohnig
 */
public final class AboutWindow extends javax.swing.JFrame
        implements DisplaysStringsToUser {
    /** The Constant DEFAULT_SIZE. */
    private static final int DEFAULT_SIZE = javax.swing.GroupLayout.DEFAULT_SIZE;

    /** The Constant PREF_SIZE. */
    private static final int PREF_SIZE = 31;

    /** The Constant serialVersionUID. */
    private static final long serialVersionUID = 1L;

    /** The beast label. */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel beastLabel;

    /** The j label 1. */
    private javax.swing.JLabel jLabel1;

    /** The version label. */
    private javax.swing.JLabel versionLabel;

    /** The version number. */
    private javax.swing.JLabel versionNumber;

    // End of variables declaration//GEN-END:variables

    /**
     * Creates new form VersionWindow.
     */
    public AboutWindow() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated
    // Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        versionLabel = new javax.swing.JLabel();
        versionNumber = new javax.swing.JLabel();
        beastLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setResizable(false);

        versionLabel.setText("Version");

        versionNumber.setText("0.1");

        beastLabel.setText("Bounded Election Attribute Structuring Tool");

        jLabel1.setText("B.E.A.S.T.");

        final javax.swing.GroupLayout layout =
                new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(layout
                .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup().addContainerGap()
                        .addGroup(layout.createParallelGroup(
                                javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                        .addComponent(versionLabel)
                                        .addPreferredGap(
                                                javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(versionNumber))
                                .addComponent(jLabel1))
                        .addContainerGap(DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout
                        .createSequentialGroup()
                        .addContainerGap(DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(beastLabel).addContainerGap()));
        layout.setVerticalGroup(layout
                .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup().addContainerGap()
                        .addComponent(jLabel1)
                        .addPreferredGap(
                                javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(beastLabel)
                        .addPreferredGap(
                                javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(
                                javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(versionLabel)
                                .addComponent(versionNumber))
                        .addContainerGap(PREF_SIZE, Short.MAX_VALUE)));
        pack();
    } // </editor-fold>//GEN-END:initComponents

    /**
     * The main method.
     *
     * @param args
     *            the command line arguments
     */
    public static void main(final String[] args) {
        /* Set the Nimbus look and feel */
        // <editor-fold defaultstate="collapsed" desc=" Look and feel setting
        // code
        // (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.
         * html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info
                    : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AboutWindow.class.getName())
                    .log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AboutWindow.class.getName())
                    .log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AboutWindow.class.getName())
                    .log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AboutWindow.class.getName())
                    .log(java.util.logging.Level.SEVERE, null, ex);
        }
        // </editor-fold>
        // </editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new AboutWindow().setVisible(true);
            }
        });
    }

    /**
     * Setter for version of BEAST.
     *
     * @param version
     *            of BEAST
     */
    protected void setVersion(final String version) {
        versionNumber.setText(version);
    }

    @Override
    public void updateStringRes(final StringLoaderInterface stringResIF) {
        final StringResourceLoader other =
                stringResIF.getParameterEditorStringResProvider().getOtherStringRes();
        setTitle(other.getStringFromID("title_about"));
        versionLabel.setText(other.getStringFromID("version"));
    }
}
