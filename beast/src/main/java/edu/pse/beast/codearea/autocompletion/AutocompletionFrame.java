package edu.pse.beast.codearea.autocompletion;

import java.awt.event.KeyEvent;

import javax.swing.DefaultListModel;
import javax.swing.JList;

/**
 * The Class AutocompletionFrame.
 *
 * @author Holger Klein
 */
public class AutocompletionFrame extends javax.swing.JFrame {

    /** The Constant PREF_VERTICAL_SIZE. */
    private static final int PREF_VERTICAL_SIZE = 300;

    /** The Constant PREF_HORIZONTAL_SIZE. */
    private static final int PREF_HORIZONTAL_SIZE = 400;

    /** The Constant serialVersionUID. */
    private static final long serialVersionUID = 1L;

    /** The j list 1. */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> jList1;

    /** The j menu item 1. */
    private javax.swing.JMenuItem jMenuItem1;

    /** The j scroll pane 1. */
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    /**
     * Creates new form AutocompletionFrame.
     */
    public AutocompletionFrame() {
        setUndecorated(true);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated
    // Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addKeyListener(new java.awt.event.KeyAdapter() {
            @Override
            public void keyPressed(final java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        jScrollPane1.setViewportView(jList1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane1,
                              javax.swing.GroupLayout.DEFAULT_SIZE,
                              PREF_HORIZONTAL_SIZE, Short.MAX_VALUE));
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane1,
                              javax.swing.GroupLayout.DEFAULT_SIZE,
                              PREF_VERTICAL_SIZE, Short.MAX_VALUE));
        pack();
    } // </editor-fold>//GEN-END:initComponents

    /**
     * Form key pressed.
     *
     * @param evt the evt
     */
    private void formKeyPressed(final java.awt.event.KeyEvent evt) {
        // GEN-FIRST:event_formKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            setVisible(false);
        }
    } // GEN-LAST:event_formKeyPressed

    /**
     * The main method.
     *
     * @param args the command line arguments
     */
    public static void main(final String[] args) {
        /* Set the Nimbus look and feel */
        // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
        // (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the default
         * look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info
                    : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(
                AutocompletionFrame.class.getName())
                .log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(
                AutocompletionFrame.class.getName())
                .log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(
                AutocompletionFrame.class.getName())
                .log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(
                AutocompletionFrame.class.getName())
                .log(java.util.logging.Level.SEVERE, null, ex);
        }
        // </editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new AutocompletionFrame().setVisible(true);
            }
        });
    }

    /**
     * Show user options.
     *
     * @param opts the opts
     */
    void showUserOptions(final String[] opts) {
        jList1.removeAll();
        DefaultListModel<String> model = new DefaultListModel<>();
        for (int i = 0; i < opts.length; i++) {
            model.addElement(opts[i]);
        }
        jList1.setModel(model);
    }

    /**
     * Gets the j list 1.
     *
     * @return the j list 1
     */
    public JList<String> getjList1() {
        return jList1;
    }
}
