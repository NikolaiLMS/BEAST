//package edu.pse.beast.booleanexpeditor.view;
//
//import javax.swing.DefaultListModel;
//import javax.swing.JList;
//import javax.swing.JTextPane;
//import javax.swing.JToolBar;
//import javax.swing.ListSelectionModel;
//import javax.swing.WindowConstants;
//
//import edu.pse.beast.highlevel.DisplaysStringsToUser;
//import edu.pse.beast.stringresource.StringLoaderInterface;
//import edu.pse.beast.toolbox.RepaintThread;
//
///**
// * The JFrame that serves as the View for the booleanexpeditor Package.
// * @author Nikolai Schnell
// */
//public class BooleanExpEditorWindow extends javax.swing.JFrame implements DisplaysStringsToUser {
//    private static final long serialVersionUID = 1L;
//    // Variables declaration - do not modify
//    private javax.swing.JButton addSymVarButton;
//    private javax.swing.JButton removeSymVarButton;
//    private javax.swing.JLabel symbVarLabel;
//    private javax.swing.JLabel preConditionLabel;
//    private javax.swing.JLabel postConditionLabel;
//    private javax.swing.JList<String> symVarList;
//    private javax.swing.JMenuBar menubar;
//    private javax.swing.JScrollPane preConditionScrollPane;
//    private javax.swing.JScrollPane symVarScrollPane;
//    private javax.swing.JScrollPane postConditionScrollPane;
//    private javax.swing.JScrollPane errorScrollPane;
//    private javax.swing.JTextPane postConditionTextPane;
//    private javax.swing.JTextPane errorTextPane;
//    private javax.swing.JToolBar toolbar;
//    private javax.swing.JTextPane preConditionTextPane;
//    private JTextPane focusedTextPane;
//    private DefaultListModel<String> listModel;
//    private String titleString;
//    // End of variables declaration
//
//    private RepaintThread repT;
//    /**
//     * Constructor, calls NetBeans generated initComponents method to initialize JFrame.
//     */
//    public BooleanExpEditorWindow() {
//        initComponents();
//        repT = new RepaintThread(this);
//        Thread t = new Thread(repT);
//        t.start();
//    }
//
//    /**
//     * This method is called from within the constructor to initialize the form.
//     * WARNING: Do NOT modify this code. The content of this method is always
//     * regenerated by the Form Editor.
//     */
//    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
//    private void initComponents( ) {
//        toolbar = new javax.swing.JToolBar();
//        symbVarLabel = new javax.swing.JLabel();
//        addSymVarButton = new javax.swing.JButton();
//        removeSymVarButton = new javax.swing.JButton();
//        preConditionLabel = new javax.swing.JLabel();
//        preConditionScrollPane = new javax.swing.JScrollPane();
//        preConditionTextPane = new javax.swing.JTextPane();
//        symVarScrollPane = new javax.swing.JScrollPane();
//        listModel = new DefaultListModel<String>();
//        symVarList = new javax.swing.JList<String>(listModel);
//        symVarList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
//        symVarList.setLayoutOrientation(JList.VERTICAL);
//        postConditionLabel = new javax.swing.JLabel();
//        postConditionScrollPane = new javax.swing.JScrollPane();
//        postConditionTextPane = new javax.swing.JTextPane();
//        errorScrollPane = new javax.swing.JScrollPane();
//        errorTextPane = new javax.swing.JTextPane();
//        menubar = new javax.swing.JMenuBar();
//        setDefaultCloseOperation(WindowConstants.HIDE_ON_CLOSE);
//
//        toolbar.setRollover(true);
//        toolbar.setFloatable(false);
//
//        setMinimumSize(new java.awt.Dimension(700, 510));
//        setPreferredSize(new java.awt.Dimension(700, 510));
//        setResizable(false);
//        symVarScrollPane.setViewportView(symVarList);
//
//        preConditionScrollPane.setViewportView(preConditionTextPane);
//
//        postConditionScrollPane.setViewportView(postConditionTextPane);
//
//        errorScrollPane.setViewportView(errorTextPane);
//
//        errorTextPane.setEditable(false);
//
//        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
//        getContentPane().setLayout(layout);
//        layout.setHorizontalGroup(
//            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addComponent(toolbar, javax.swing.GroupLayout.DEFAULT_SIZE, 715, Short.MAX_VALUE)
//            .addGroup(layout.createSequentialGroup()
//                .addContainerGap()
//                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//                    .addGroup(layout.createSequentialGroup()
//                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//                            .addGroup(layout.createSequentialGroup()
//                                .addComponent(symbVarLabel)
//                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
//                                .addComponent(addSymVarButton)
//                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
//                                .addComponent(removeSymVarButton))
//                            .addComponent(preConditionLabel))
//                        .addGap(147, 193, Short.MAX_VALUE))
//                    .addGroup(layout.createSequentialGroup()
//                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//                            .addComponent(errorScrollPane)
//                            .addComponent(postConditionScrollPane, javax.swing.GroupLayout.Alignment.TRAILING)
//                            .addComponent(preConditionScrollPane, javax.swing.GroupLayout.Alignment.TRAILING)
//                            .addComponent(symVarScrollPane, javax.swing.GroupLayout.Alignment.TRAILING)
//                            .addGroup(layout.createSequentialGroup()
//                                .addComponent(postConditionLabel)
//                                .addGap(0, 0, Short.MAX_VALUE)))
//                        .addContainerGap())))
//        );
//        layout.setVerticalGroup(
//            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(layout.createSequentialGroup()
//                .addComponent(toolbar)
//                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
//                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
//                    .addComponent(symbVarLabel)
//                    .addComponent(addSymVarButton)
//                    .addComponent(removeSymVarButton))
//                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
//                .addComponent(symVarScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 52,
//                        javax.swing.GroupLayout.PREFERRED_SIZE)
//                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
//                .addComponent(preConditionLabel)
//                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
//                .addComponent(preConditionScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 86,
//                        javax.swing.GroupLayout.PREFERRED_SIZE)
//                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
//                .addComponent(postConditionLabel)
//                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
//                .addComponent(postConditionScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 98,
//                        javax.swing.GroupLayout.PREFERRED_SIZE)
//                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
//                .addComponent(errorScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 93,
//                        javax.swing.GroupLayout.PREFERRED_SIZE))
//        );
//
//        pack();
//    } // </editor-fold>//GEN-END:initComponents
//
//    /**
//     * Update the language dependent displayed Strings in this class.
//     * @param stringLoaderInterface the new stringLoaderInterface
//     */
//    public void updateStringRes(StringLoaderInterface stringLoaderInterface) {
//        postConditionLabel.setText(stringLoaderInterface.getBooleanExpEditorStringResProvider().
//                getBooleanExpEditorWindowStringRes().getStringFromID("postConditions"));
//        preConditionLabel.setText(stringLoaderInterface.getBooleanExpEditorStringResProvider().
//                getBooleanExpEditorWindowStringRes().getStringFromID("preConditions"));
//        addSymVarButton.setText(stringLoaderInterface.getBooleanExpEditorStringResProvider().
//                getBooleanExpEditorWindowStringRes().getStringFromID("add"));
//        removeSymVarButton.setText(stringLoaderInterface.getBooleanExpEditorStringResProvider().
//                getBooleanExpEditorWindowStringRes().getStringFromID("remove"));
//        symbVarLabel.setText(stringLoaderInterface.getBooleanExpEditorStringResProvider().
//                getBooleanExpEditorWindowStringRes().getStringFromID("symbolicVariablesLabel"));
//        titleString = stringLoaderInterface.getBooleanExpEditorStringResProvider().
//                getBooleanExpEditorWindowStringRes().getStringFromID("windowTitle");
//        setTitle(titleString);
//    }
//
//    /**
//     * Getter
//     * @return The JTextPane for the precondition.
//     */
//    public javax.swing.JTextPane getPreConditionTextPane() {
//        return preConditionTextPane;
//    }
//
//    /**
//     * Getter
//     * @return The JScrollPane for the precondition.
//     */
//    public javax.swing.JScrollPane getPreConditionScrollPane() {
//        return preConditionScrollPane;
//    }
//
//    /**
//     * Getter
//     * @return The JTextPane for the postcondition.
//     */
//    public javax.swing.JTextPane getPostConditionTextPane() {
//        return postConditionTextPane;
//    }
//
//    /**
//     * Getter
//     * @return The JScrollPane for the postcondition.
//     */
//    public javax.swing.JScrollPane getPostConditionScrollPane() {
//        return postConditionScrollPane;
//    }
//
//    /**
//     * Getter
//     * @return the JTextPane for static error displaying
//     */
//    public javax.swing.JTextPane getErrorTextPane() {
//        return errorTextPane;
//    }
//
//    /**
//     * Getter
//     * @return the JList that contains the user defined symbolic variables
//     */
//    public javax.swing.JList<String> getSymVarList() {
//        return symVarList;
//    }
//
//    /**
//     * Getter
//     * @return the JButton to add symbolic variables
//     */
//    public javax.swing.JButton getAddSymVarButton() {
//        return addSymVarButton;
//    }
//
//    /**
//     * Getter
//     * @return the JButton to remove symbolic variables
//     */
//    public javax.swing.JButton getRemoveSymVarButton()  {
//        return removeSymVarButton;
//    }
//
//    /**
//     * Adds the given string to the window title, used for displaying name of
//     * currently loaded PreAndPostConditionDescription
//     * @param s name of the currently loaded PreAndPostConditionsDescription
//     */
//    public void setWindowTitle(String s) {
//        this.setTitle(titleString + " " + s + " - BEAST");
//    }
//
//    /**
//     * Getter
//     * @return toolbar the JToolBar object.
//     */
//    public JToolBar getToolbar() {
//        return toolbar;
//    }
//
//    /**
//     * Setter to create new JTextPanes.
//     */
//    public void setNewTextpanes() {
//        preConditionTextPane = null;
//        preConditionTextPane = new JTextPane();
//        preConditionScrollPane.setViewportView(preConditionTextPane);
//        postConditionTextPane = null;
//        postConditionTextPane = new JTextPane();
//        postConditionScrollPane.setViewportView(postConditionTextPane);
//    }
//
//}
